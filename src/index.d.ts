import objectAdaptor from "./objectAdaptor";
import arrayAdaptor from "./arrayAdaptor";
declare type NewKey = string;
export declare type OldKey<T> = keyof T;
export declare type HandleFunction = (value: any, data: any) => any;
export declare type StructItem<T, P> = [keyof T, (keyof P)?, HandleFunction?] | [keyof T, HandleFunction?];
export declare type CallbackFn<T> = (key: string, data: T) => boolean;
export declare type StructType<T, P> = StructItem<T, P>[];
export declare type ChildrenOption<T> = [OldKey<T>, NewKey?];
export { objectAdaptor, arrayAdaptor, };
